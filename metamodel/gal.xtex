GALTypeDeclaration:
	('gal'|'GAL') name=FullyQualifiedName 
	('('
	params += ConstParameter
	( ',' params+= ConstParameter)* 
	')')?
	'{'
	(
	(typedefs+=TypedefDeclaration)
	|(variables+=VariableDeclaration) 
	|(arrays+=ArrayDeclaration) 
	)*
	(transitions+=Transition 
	| predicates+=Predicate	
	)*
	('TRANSIENT' '=' transient=Or ';')?
	'}';


// A constant defined as type parameter or global specification level
ConstParameter : 
	name=PARAMNAME '=' value=Integer
;


// A typedef found in many places (spec, gal, composite)
TypedefDeclaration: (comment=COMMENT)? 'typedef' name=ID '=' min=BitOr '..' max=BitOr ';';



//Ex: int abc = 10 ; 
VariableDeclaration returns Variable:
	(comment=COMMENT)?
	(hotbit?='hotbit' '(' hottype=[TypedefDeclaration] ')')? 'int' name=FullyQualifiedName '=' value=BitOr ';';


	//Ex: array[1] tab = (2) ;
ArrayDeclaration returns ArrayPrefix:
	(comment=COMMENT)?
	(hotbit?='hotbit' '(' hottype=[TypedefDeclaration] ')')? 
	'array' '[' size=INT ']' name=FullyQualifiedName '=' '(' ( (values+=BitOr) (',' values+=BitOr)* )? ')' ';';

Transition:
	(comment=COMMENT)? 
	'transition' name=FullyQualifiedName 
	('(' params+=Parameter 	( ',' params+=Parameter)* ')')? 
	'[' guard=Or ']' 
	('label' label=Label)? 
	'{'
	(actions+=GalStatement)*
	'}';

Predicate:
	(comment=COMMENT)? 
	'predicate' name=FullyQualifiedName '=' value=Or  ';' 
;
